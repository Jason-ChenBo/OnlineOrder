{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","getMenus","restId","json","getRestaurants","addItemToCart","itemId","Option","Select","AddToCartButton","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","data","value","onSelect","placeholder","style","width","onChange","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","values","setState","console","log","props","onSuccess","className","this","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","valuePropName","noStyle","htmlType","Component","Header","Layout","Content","Title","Typography","App","authed","setAuthed","justifyContent","level","color","lineHeight","marginBottom","MyCart","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc03407.chunk.js","sourcesContent":["// include all the request to the server\n\nexport const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst AddToCartButton = ({ itemId }) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect(() => {\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{ width: 300 }}\n                onChange={() => {}}\n            >\n                {restaurants.map((item) => {\n                    return <Option value={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id} />}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{ height: 340, width: \"100%\", display: \"block\" }}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;","import React, {Component} from 'react';\nimport { Form, Input, Button, Checkbox,message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { login } from \"../utils\";\n\n\nclass LoginForm extends Component {\n    state = {\n        loading:false,\n    };\n\n    onFinish = (values) => {\n        this.setState({loading: true})\n        console.log('Received values of form: ', values);\n        login(values)\n            .then( () => {\n                // show login success\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch( err => {\n                //show err\n                message.error(err.message);\n            })\n            .finally(()=>{\n                this.setState({loading:false})\n            })\n    };\n\n    render() {\n        return (\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                        placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    </Form.Item>\n\n\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default LoginForm;\n\n","import React, {useState, useEffect} from 'react';\nimport { Select, message, List, Card, Tooltip, Button } from 'antd';\nimport { getRestaurants, getMenus, addItemToCart } from '../utils';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nfunction AddToCartButton({itemId}) {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        // add selected menu to the cart\n        // step1: set loading to true\n        // step2: add menu to cart and inform the server\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n\n    }\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    )\n}\n\nfunction FoodList(props) {\n    // current selected option\n    const [curRest, setCurRest] = useState();\n    // loading restaurant status\n    const [loadingRest, setLoadingRest] = useState(false);\n    // restaurant list\n    const [restaurants, setRestaurants] = useState([]);\n    // loading restaurant menu\n    const [loading, setLoading] = useState(false);\n    // store menu status\n    const [foodData, setFoodData] = useState([]);\n\n    // fetch restaurant list\n    useEffect(() => {\n        // step1: set loading restaurant = true\n        // step2: fetch restaurant list from the server\n        setLoadingRest(true);\n        getRestaurants()\n            .then( response => {\n                setRestaurants(response);\n            })\n            .catch( err => {\n                message.error(err.message);\n            })\n            .finally( () => {\n                setLoadingRest(false);\n            })\n    }, []);\n\n    // fetch menu of current selected restaurant\n    useEffect( () => {\n        // step1: set loading menu status\n        // step2: fetch menu from the server\n        if(curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then( response => {\n                    setFoodData(response);\n                })\n                .catch( err => {\n                    message.error(err.message);\n                })\n                .finally( () => {\n                    setLoading(false);\n                })\n        }\n    }, [curRest])\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                loading={loadingRest}\n                style={{ width: 300 }}\n                placeholder=\"Select a restaurant\"\n                onChange={ () => {} }\n                onSelect={ value => setCurRest(value) }\n            >\n                {\n                    restaurants.map(\n                        item => <Option key={item.id} value={item.id}>{item.name}</Option>\n                    )\n                }\n            </Select>\n            {\n                curRest && (\n                    <List\n                        style={{ marginTop: 20 }}\n                        loading={ loading }\n                        grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 3,\n                            xxl: 3,\n                        }}\n                        dataSource={foodData}\n                        renderItem={item => (\n                            <List.Item>\n                                <Card title={item.name}\n                                      extra={<AddToCartButton itemId={item.id}/>}\n                                >\n                                    <img src={item.imageUrl}\n                                         alt={item.name}\n                                         style={{ height: 'auto', width: \"100%\", display: \"block\" }}\n                                    />\n                                    Price: { item.price }\n                                </Card>\n                            </List.Item>\n                        )}\n                    />\n                )\n            }\n        </>\n    );\n}\n\nexport default FoodList;","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Header>\n                <div className=\"header\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                    <Title\n                        level={2}\n                        style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                    >\n                        Lai Food\n                    </Title>\n                    {authed && (\n                        <div>\n                            <MyCart />\n                        </div>\n                    )}\n                </div>\n            </Header>\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >\n                {authed ? (\n                    <FoodList />\n                ) : (\n                    <LoginForm onSuccess={() => setAuthed(true)} />\n                )}\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}